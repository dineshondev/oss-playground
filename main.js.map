{"version":3,"sources":["./src/app/rules/ts/Requisition.oss.ts","./src/app/components/requisition-form/requisition-form.component.ts","./src/app/components/requisition-form/requisition-form.component.html","./src/environments/environment.ts","./src/app/model/requisition.model.ts","./src/app/model/requisition-li.model.ts","./src/app/model/supplier.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/meta-object.service.ts","./src/app/model/company-code.model.ts","./src/app/services/requisition.service.ts","./src/app/rules/ts/ReqLineItem.oss.ts","./src/app/model/money.model.ts","./src/app/app.module.ts","./src/app/components/requisition-form/meta.validator.ts","./src/app/components/requisition-form/date-converter.directive.ts","./src/app/rules/ts/Application.oss.ts","./src/app/components/requisition-form/meta.flatten-visible.pipe.ts","./src/app/rules/user-rules.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/**\n *  This is generated file. Do not edit !!\n *\n *  @formatter:off\n *\n */\n/* tslint:disable */\nexport const RequisitionRule = 'class=Requisition {ɵɵ field=uniqueName {ɵ   editable:false;ɵ   label:\"Id\";ɵ  }ɵɵ  field=title {ɵ    trait: required;ɵ    label:\"Name\";ɵ  }ɵɵ  field=dueOn {ɵ    label:\"Delivered by\";ɵ  }ɵɵ  field=status {ɵ    label: \"State\";ɵ    component: Select;ɵ    choices:[\"New\", \"In Progress\", \"Approving\", \"Approved\", \"Ordered\"];ɵ  }ɵɵ  field=totalNetAmount {ɵ    label: \"Total Amount\";ɵ  }ɵɵ  field=lineItems {ɵ     component:Table;ɵ  }ɵ  zNone => *;ɵ  zLeft => uniqueName => title  =>  status  => totalNetAmount  => dueOn => lineItems;ɵ}ɵɵdocumentType=RV {ɵ  class=Requisition { field=title { visible: false; } }ɵ}ɵɵɵ';\n/* tslint:disable */\n/**\n *  @formatter:on\n *\n */\n ","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport {Requisition} from 'src/app/model/requisition.model';\nimport {MetaContextComponent, UIMeta} from '@ngx-metaui/rules';\nimport {ApplicationRule, ReqLineItemRule, RequisitionRule} from '../../rules/user-rules'\nimport {NgModel} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-requisition-form',\n  templateUrl: './requisition-form.component.html',\n  styleUrls: ['./requisition-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RequisitionFormComponent implements AfterViewInit, OnInit {\n  @Input()\n  public req: Requisition;\n\n  @ViewChild('rootContext')\n  mc: MetaContextComponent;\n\n  @ViewChildren('formInput')\n  fields: QueryList<NgModel>;\n\n\n  rules: any = ['Application.oss', 'Requisition.oss', 'ReqLineItem.oss'];\n  currentRule = '';\n  currentRuleContent = '';\n\n  name2Rule: Map<string, string> = new Map<string, string>();\n  editorOptions = {theme: 'vs-dark', language: 'css'};\n\n  constructor(public _cd: ChangeDetectorRef, private ruleEngine: UIMeta) {\n    this.ruleEngine.registerDependency('controller', this);\n  }\n\n  ngOnInit(): void {\n    this.name2Rule.set('Application.oss', ApplicationRule.replace(/ɵ/g, '\\n'));\n    this.name2Rule.set('Requisition.oss', RequisitionRule.replace(/ɵ/g, '\\n'));\n    this.name2Rule.set('ReqLineItem.oss', ReqLineItemRule.replace(/ɵ/g, '\\n'));\n  }\n\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      if (window.monaco && window.monaco.languages) {\n        window.monaco.languages.css.cssDefaults.setDiagnosticsOptions({\n          validate: false\n        });\n      }\n    }, 2000);\n    this._cd.detectChanges();\n\n    console.log(this.fields)\n    this.fields.changes.subscribe((list: QueryList<NgModel>) => {\n      list.toArray().forEach(model => {\n        model.valueChanges.subscribe(change => {\n          this._cd.markForCheck();\n        });\n\n        model.statusChanges.subscribe(change => {\n          this._cd.markForCheck();\n        });\n      })\n    });\n  }\n\n\n  onRuleChange(): void {\n    this.currentRuleContent = this.name2Rule.get(this.currentRule);\n  }\n\n  trackByFn(index, item) {\n    return item;\n  }\n\n  reloadRule() {\n    this.ruleEngine.reloadRuleFile({\n      module: 'App',\n      filePath: this.currentRule,\n      content: this.currentRuleContent\n    });\n    this.ruleEngine.registerDependency('controller', this);\n    this.mc.markDirty();\n    this._cd.detectChanges();\n  }\n}\n","<div class=\"fd-container\">\n  <div class=\"fd-row\">\n    <div class=\"fd-col fd-col--full\">\n      <ng-container *ngTemplateOutlet=\"appContent\">\n      </ng-container>\n\n    <pre>\n       <code>\n          {{req | json}}\n         </code>\n    </pre>\n    </div>\n    <div class=\"fd-col fd-col--6\">\n      <ng-container *ngTemplateOutlet=\"ossEditor\">\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n\n<ng-template #appContent>\n  <m-context #rootContext *ngIf=\"req\" [object]=\"req\" operation=\"edit\" documentType=\"RV\">\n    <m-context scopeKey=\"class\">\n      <form>\n        <div class=\"fd-container fd-form-layout-grid-container fd-form-layout-grid-container--vertical\"\n             style=\"max-width:600px\">\n          <ng-template ngFor let-field [ngForOf]=\"rootContext | flattenVisible\" let-rank=\"index\"\n                       [ngForTrackBy]=\"trackByFn\">\n            <ng-template [ngIf]=\"field !== 'lineItems'\" [ngIfElse]=\"ffLines\">\n              <div class=\"  fd-col fd-col-lg--6 fd-col-xl--4 fd-col--wrap\">\n                <div class=\"fd-row\">\n                  <div class=\"fd-col\">\n                    <ng-container *ngTemplateOutlet=\"ff;context:{$implicit: field }\">\n                    </ng-container>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n\n          </ng-template>\n        </div>\n\n      </form>\n    </m-context>\n  </m-context>\n</ng-template>\n\n<ng-template #ossEditor>\n  <div class=\"fd-form-item\">\n    <select class=\"select-css\" [(ngModel)]=\"currentRule\" (ngModelChange)=\"onRuleChange()\">\n      >\n      <option value=\"\" disabled>Choose Rule</option>\n      <option *ngFor=\"let rule of rules\" [ngValue]=\"rule\">{{rule}}</option>\n    </select>\n\n  </div>\n  <div style=\"margin-top:10px;height: 600px\">\n    <ngx-monaco-editor style=\"height: 100%\" [options]=\"editorOptions\"\n                       [(ngModel)]=\"currentRuleContent\"></ngx-monaco-editor>\n  </div>\n  <button class=\"fd-button fd-button--emphasized\" (click)=\"reloadRule()\">Update</button>\n</ng-template>\n\n\n<!-- Render Form Field-->\n<ng-template #ff let-field>\n  <m-context #metaField [field]=\"field\">\n    <div class=\"fd-form-item\" *ngIf=\"metaField | properties:'visible'\">\n      <label class=\"fd-form-label\"\n             [class.fd-form-label--required]=\"metaField | properties:'required':false\"\n             [attr.for]=\"field\"\n             [attr.required]=\"(metaField | properties:'required':false) && (metaField | properties: 'editable':false)\">\n        {{metaField | properties:'label'}}\n      </label>\n\n      <ng-container\n        *ngTemplateOutlet=\"ffControls;context:{\n        $implicit: field, mc:metaField,\n        id: field,\n        type: (metaField | properties:'type'),\n        editable: (metaField | properties:'editable'),\n        model: req\n        }\">\n      </ng-container>\n    </div>\n  </m-context>\n</ng-template>\n\n\n<!-- Render Form Field line Item-->\n<ng-template #ffLines>\n  <div class=\"fd-col fd-col-lg--12 fd-col-xl--12\">\n    <div class=\"fd-row\">\n      <div class=\"fd-col\">\n        <ng-container *ngTemplateOutlet=\"ff;context:{$implicit: 'lineItems' }\">\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n\n<!-- Form Field Control -->\n<ng-template #ffControls let-field let-mc=\"mc\" let-type=\"type\" let-id=\"id\" let-editable=\"editable\" let-model=\"model\">\n<!--  <ng-container *ngTemplateOutlet=\"debugPrint;context:{$implicit: mc}\">-->\n<!--  </ng-container>-->\n\n  <ng-template [ngIf]=\"editable\">\n    <ng-template [ngIf]=\"(mc | properties:'component': 'Table') === 'Select'\">\n      <ng-container\n        *ngTemplateOutlet=\"ArrayControlAsSelect;context:{ $implicit: field, mc:mc, type: (mc | properties:'type'), id:id,\n        editable: (mc | properties:'editable'),  model:model  }\">\n      </ng-container>\n    </ng-template>\n\n    <ng-template [ngIf]=\"(type === 'String' || type === 'Number') && (mc | properties:'component': null) === null\">\n      <ng-container\n        *ngTemplateOutlet=\"OtherControl;context:{ $implicit: field, mc:mc, type: (mc | properties:'type'), id:id,\n        editable: (mc | properties:'editable'), model:model }\">\n      </ng-container>\n    </ng-template>\n\n    <ng-template [ngIf]=\"type === 'Date'\">\n      <ng-container\n        *ngTemplateOutlet=\"DateControl;context:{ $implicit: field, mc:mc, type: (mc | properties:'type'), id:id, editable: (mc | properties:'editable'), model:model }\">\n      </ng-container>\n    </ng-template>\n\n\n    <ng-template [ngIf]=\"type === 'Money'\">\n      <ng-container\n        *ngTemplateOutlet=\"MoneyControl;context:{ $implicit: field, mc:mc, type: (mc | properties:'type'), id:id, editable: (mc | properties:'editable'), model:model }\">\n      </ng-container>\n    </ng-template>\n  </ng-template>\n\n  <ng-template [ngIf]=\"type === 'Array' && (mc | properties:'component': 'Table') === 'Table'\">\n    <ng-container\n      *ngTemplateOutlet=\"ArrayControlAsTable;context:{ $implicit: field, mc:mc, type: (mc | properties:'type'), id:id, editable: (mc | properties:'editable') }\">\n    </ng-container>\n  </ng-template>\n\n\n  <ng-template [ngIf]=\"!editable\">\n    <ng-template [ngIf]=\"type === 'Date'\">\n      <span class=\"string-field\">{{model[field] | date:'MM/dd/yyyy'}}</span>\n    </ng-template>\n\n    <ng-template [ngIf]=\"type !== 'Date'\">\n      <span clas  s=\"string-field\">{{model[field]}}</span>\n    </ng-template>\n  </ng-template>\n\n</ng-template>\n\n\n<!-- Array as Select-->\n<ng-template #ArrayControlAsSelect let-field let-mc=\"mc\" let-type=\"type\" let-editable=\"editable\" let-id=\"id\"  let-model=\"model\">\n  <ng-container *ngTemplateOutlet=\"renderSelect;context:{$implicit: field, mc:mc, type:type, id:id, editable: editable,  model:model }\">\n  </ng-container>\n</ng-template>\n\n<!-- Array as Table-->\n<ng-template #ArrayControlAsTable let-field let-mc=\"mc\" let-type=\"type\" let-editable=\"editable\">\n  <ng-container *ngTemplateOutlet=\"renderLineItems;context:{$implicit: mc, lines: req[field] }\">\n  </ng-container>\n</ng-template>\n\n\n<!-- Render renderLineItems-->\n<ng-template #renderLineItems let-mc let-lineItems=\"lines\">\n  <table class=\"fd-table\" *ngIf=\"mc | properties:'visible'\">\n    <m-context [class]=\"mc | properties: 'elementType'\" style=\"display: table-header-group\"\n               [ngClass]=\"'fd-table__header'\" operation=\"list\" [pushNewContext]=\"true\">\n      <m-context #tableMain scopeKey=\"class\" style=\"display: table-row\" [ngClass]=\"'fd-table__row'\">\n\n        <ng-template ngFor let-field [ngForOf]=\"tableMain | flattenVisible:'table'\" let-index=\"index\"\n                     [ngForTrackBy]=\"trackByFn\">\n          <ng-container *ngTemplateOutlet=\"tableCell;context:{$implicit: field, isHeader: true, index:index}\">\n          </ng-container>\n        </ng-template>\n\n      </m-context>\n    </m-context>\n\n    <tbody class=\"fd-table__body\">\n    <ng-template ngFor let-item [ngForOf]=\"lineItems\" let-rank=\"index\">\n      <m-context #liValue [object]=\"item\" operation=\"edit\" [pushNewContext]=\"true\" style=\"display: table-row\"\n                 [ngClass]=\"'fd-table__row'\">\n\n        <ng-template ngFor let-field [ngForOf]=\"liValue | flattenVisible\" let-index=\"index\" [ngForTrackBy]=\"trackByFn\">\n          <ng-container\n            *ngTemplateOutlet=\"tableCell;context:{$implicit: field, isHeader: false, model:item, index:rank}\">\n          </ng-container>\n        </ng-template>\n      </m-context>\n    </ng-template>\n    </tbody>\n  </table>\n</ng-template>\n\n<!-- table cell-->\n<ng-template #tableCell let-field let-isHeader=\"isHeader\" let-model=\"model\" let-index=\"index\">\n  <ng-template [ngIf]=\"isHeader\">\n    <m-context #cell [field]=\"field\" style=\"display: table-cell; vertical-align: middle;\"\n               [ngClass]=\"'fd-table__cell'\">\n      {{cell | properties: 'label'}}\n    </m-context>\n  </ng-template>\n\n  <ng-template [ngIf]=\"!isHeader\">\n    <m-context #cell [field]=\"field\" style=\"display: table-cell; vertical-align: middle;\"\n               [ngClass]=\"'fd-table__cell'\">\n      <ng-container\n        *ngTemplateOutlet=\"ffControls;context:{\n        $implicit: field,\n        mc:cell,\n        id: field + index,\n        type: (cell | properties:'type'),\n        editable: (cell | properties:'editable'),\n        model: model\n        }\">\n      </ng-container>\n    </m-context>\n  </ng-template>\n\n\n</ng-template>\n\n<!-- Date control-->\n<ng-template #DateControl let-field let-mc=\"mc\" let-type=\"type\" let-editable=\"editable\" let-model=\"model\" let-id=\"id\">\n\n  <input #formInput=\"ngModel\"\n         metaValid\n         [attr.id]=\"id\"\n         [attr.name]=\"id\"\n         class=\"fd-input\"\n          type=\"date\"\n         [(ngModel)]=\"model[field]\"\n         [context]=\"mc\"\n         [required]=\"mc | properties:'required':false\"\n         [disabled]=\"mc | properties: 'disabled'\">\n\n  <ng-container *ngTemplateOutlet=\"error;context:{ $implicit: formInput}\">\n  </ng-container>\n</ng-template>\n\n<!-- string and number control-->\n<ng-template #OtherControl let-field let-mc=\"mc\" let-type=\"type\" let-editable=\"editable\" let-model=\"model\" let-id=\"id\">\n  <input #formInput=\"ngModel\"\n         metaValid\n         [attr.id]=\"id\"\n         [attr.name]=\"id\"\n         class=\"fd-input\"\n         [attr.type]=\"type.toLowerCase()\"\n         [(ngModel)]=\"model[field]\"\n         [context]=\"mc\"\n         [required]=\"mc | properties:'required':false\"\n         [disabled]=\"mc | properties: 'disabled'\">\n\n  <ng-container *ngTemplateOutlet=\"error;context:{ $implicit: formInput}\">\n  </ng-container>\n</ng-template>\n\n<!-- Money control-->\n<ng-template #MoneyControl let-field let-mc=\"mc\" let-type=\"type\" let-id=\"id\" let-editable=\"editable\" let-model=\"model\">\n  <input #formInput=\"ngModel\"\n         metaValid\n         currencyMask\n         [options]=\"{ prefix: '$ ', thousands: '.', decimal: ',' , inputMode: 'NATURALs'}\"\n         [attr.id]=\"id\"\n         [attr.name]=\"id\"\n         class=\"fd-input\"\n         [(ngModel)]=\"model[field]\"\n         [context]=\"mc\"\n         [required]=\"mc | properties:'required':false\"\n         [disabled]=\"mc | properties: 'disabled'\">\n\n\n  <ng-container *ngTemplateOutlet=\"error;context:{ $implicit: formInput}\">\n  </ng-container>\n</ng-template>\n\n<!-- Select control-->\n<ng-template #renderSelect let-field let-mc=\"mc\" let-type=\"type\" let-editable=\"editable\" let-model=\"model\" let-id=\"id\" >\n\n  <select #formInput=\"ngModel\"\n          metaValid\n          [attr.id]=\"id\"\n          [attr.name]=\"id\"\n          class=\"select-css\"\n          [(ngModel)]=\"model[field]\"\n          [context]=\"mc\"\n          [required]=\"mc | properties:'required':false\"\n          [disabled]=\"mc | properties: 'disabled'\" >\n    >\n    <option *ngFor=\"let rule of (mc | properties: 'choices')\" [ngValue]=\"rule\">{{rule}}\n    </option>\n  </select>\n\n\n  <ng-container *ngTemplateOutlet=\"error;context:{ $implicit: formInput}\">\n  </ng-container>\n</ng-template>\n\n\n\n\n<!-- Print Error -->\n<ng-template #error let-formInput>\n\n  <div style=\"color:red\" *ngIf=\"formInput.errors && (formInput.dirty || formInput.touched) \">\n    <p *ngIf=\"formInput.errors\">\n    <span *ngIf=\"formInput.errors.metavalid\">\n            {{formInput.errors.metavalid.msg    }}\n        </span>\n      <span *ngIf=\"formInput.errors?.required && !formInput.errors.metavalid\">\n            Required field\n    </span>\n    </p>\n  </div>\n</ng-template>\n\n\n<!--<ng-container *ngTemplateOutlet=\"debugPrint;context:{$implicit: rootContext}\">-->\n<!--</ng-container>-->\n\n\n<ng-template #debugPrint let-mc>\n  <!--    <div style=\"margin-top: 10px; border-top: 1px solid black\">-->\n  <!--      <span [innerHTML]=\"mc.debugString()\">-->\n  <!--      </span>-->\n  <!--    </div>-->\n\n  <ul *ngIf=\"true\" style=\"margin-left: 15px\">\n    <li *ngFor=\"let record of mc.context.allProperties()._map | keyvalue \">\n      {{record.key}} :\n      <span *ngIf=\"record.key === 'bindings'\">\n              &#123;\n              <ul style=\"margin-left: 25px\">\n\n                <li *ngFor=\"let binding of mc | properties:'bindings' | keyvalue \">\n\n                  <span\n                    *ngIf=\"binding.value.constructor.name === 'Expr' || binding.value.constructor.name === 'ContextFieldPath'\">\n                    <span style=\"font-style: italic\">{{binding.key}} </span>:\n                    {{binding.value.evaluate(mc.context)}}  : {{binding.value}}\n                  </span>\n\n                  <span\n                    *ngIf=\"binding.value.constructor.name !== 'Expr' && binding.value.constructor.name !== 'ContextFieldPath'\">\n                      {{binding.key}} : {{binding.value}}\n                  </span>\n                </li>\n              </ul>\n              &#125;\n            </span>\n\n      <span *ngIf=\"record.key !== 'bindings'\">\n             {{mc.context.propertyForKey(record.key)}}\n            </span>\n    </li>\n  </ul>\n</ng-template>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {ReqLineItem} from './requisition-li.model';\nimport {Entity} from '@ngx-metaui/rules';\nimport {Money} from './money.model';\n\nexport class Requisition implements Entity {\n  uniqueName: string;\n  title: string;\n  dueOn: Date;\n  status: string;\n  totalNetAmount: number;\n  lineItems: Array<ReqLineItem>;\n\n\n  constructor(uniqueName?: string, title?: string, dueOn?: Date, status?: string, totalNetAmount?: number,\n              lineItems?: Array<ReqLineItem>) {\n    this.uniqueName = uniqueName;\n    this.title = title;\n    this.dueOn = dueOn;\n    this.status = status;\n    this.totalNetAmount = totalNetAmount;\n    this.lineItems = lineItems || [];\n  }\n\n\n  addLineItem(li: ReqLineItem): void {\n    this.lineItems.push(li);\n  }\n\n\n  className(): string {\n    return 'Requisition';\n  }\n\n  getTypes(): any {\n    return {\n      uniqueName: String,\n      title: String,\n      dueOn: Date,\n      status: String,\n      totalNetAmount: Money,\n      lineItems: Array(ReqLineItem)\n    };\n  }\n\n\n  identity(): string {\n    return this.uniqueName;\n  }\n}\n\n","import {Supplier} from './supplier.model';\nimport {CompositeType, Value} from '@ngx-metaui/rules';\nimport {CompanyCode} from './company-code.model';\n\nexport class ReqLineItem implements Value {\n  shortText: string;\n  supplier: Supplier;\n  price: number;\n  quantity: number;\n  companyCode: CompanyCode;\n  minQuantity: number;\n\n  parent: CompositeType = null;\n\n  constructor(shortText?: string, supplier?: Supplier, price?: number, quantity?: number, companyCode?: CompanyCode, minQuantity?: number) {\n    this.shortText = shortText;\n    this.supplier = supplier;\n    this.price = price;\n    this.quantity = quantity;\n    this.companyCode = companyCode;\n  }\n\n  className(): string {\n    return 'ReqLineItem';\n  }\n\n  clone(): Value {\n    return undefined;\n  }\n\n  getTypes(): any {\n    return {\n      shortText: String,\n      supplier: Supplier,\n      price: Number,\n      quantity: Number,\n      companyCode: CompanyCode,\n      minQuantity: Number,\n    };\n  }\n}\n","import {Entity} from '@ngx-metaui/rules';\n\nexport class Supplier implements Entity {\n  name: string;\n  email: string;\n\n\n  constructor(name: string, email?: string) {\n    this.name = name;\n    this.email = email;\n  }\n\n  className(): string {\n    return 'Supplier';\n  }\n\n  getTypes(): any {\n    return {\n      name: String,\n      email: String\n    };\n  }\n\n  identity(): string {\n    return this.name;\n  }\n\n  toString(): string {\n    return this.name;\n  }\n\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Context, UIMeta} from '@ngx-metaui/rules';\nimport {Requisition} from './model/requisition.model';\nimport {RequisitionService} from './services/requisition.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  pr: Requisition;\n  manualControl = false;\n\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n              protected meta: UIMeta,\n              private route: ActivatedRoute,\n    private reqService: RequisitionService,\n  ) { }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.route.queryParams.subscribe((params) => {\n        this.manualControl = params.manualControl === 'true';\n        const reqId = params.reqId || 'PR1';\n        this.reqService.getRequisition(reqId);\n        if (this.manualControl) {\n          this.experimentDirectlyWithMetaUI();\n        }\n      }),\n    );\n\n    this.subscription.add(\n      this.reqService.requisition$.subscribe(req => this.pr = req),\n    );\n\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private experimentDirectlyWithMetaUI(): void {\n    const context = this.meta.newContext();\n    context.push();\n    context.set('layout', 'Inspect');\n    context.set('operation', 'view');\n    context.set('object', this.pr);\n\n    context.setScopeKey('class');\n\n    console.log('@@ Pushing field TITLE and checking properties >>>');\n    context.push();\n    context.set('field', 'title');\n    this.printProperty('visible', context);\n    context.pop();\n\n\n    console.log('@@ Now trying to push another contextual property, to see if right selector is triggered where we change name >>>');\n    console.log('   >> Wrapping push with context.push(); context frame so I can easily roll it back.');\n    context.push();\n    context.set('documentType', 'RV');\n    context.set('field', 'title');\n    this.printProperty('visible', context);\n    context.pop();\n\n    console.log('@@ After documentType rollback we expect default label');\n    context.set('field', 'title');\n    this.printProperty('visible', context)\n\n    context.pop();\n  }\n\n  private printProperty(propertyName: string, context: Context) {\n    console.log(`\\tProperty ${propertyName} :`, context.propertyForKey(propertyName));\n  }\n}\n","<h1>OSS Playground</h1>\n\n<m-context *ngIf=\"false\" #mc0 [object]=\"pr\" operation=\"edit\">\n  <ng-container *ngTemplateOutlet=\"PrintObject;context:{$implicit: mc0}\">\n  </ng-container>\n</m-context>\n\n<!--\n  Print properties related only to Object adn then continue with CLASS\n-->\n<ng-template #PrintObject let-mc>\n  <h2 style=\"color: cadetblue\">Object</h2>\n  <h3>Properties evaluated at Operation/Object level</h3>\n  <ng-container *ngTemplateOutlet=\"debugPrint;context:{$implicit: mc}\">\n  </ng-container>\n\n  <ng-container *ngTemplateOutlet=\"PrintClass\">\n  </ng-container>\n</ng-template>\n\n\n<!--\n  Process class its type & its its fields and their types and properties\n-->\n<ng-template #PrintClass>\n  <h2 style=\"color: cadetblue\">Class</h2>\n  <h3>Properties evaluated for changed scope to class. It will be print all related to class Requisition</h3>\n  <m-context #mcScope scopeKey=\"class\">\n    <ng-container *ngTemplateOutlet=\"debugPrint;context:{$implicit: mcScope}\">\n    </ng-container>\n\n    <h2 style=\"color: cadetblue\">Fields</h2>\n    <ng-template ngFor let-fieldName [ngForOf]=\"mcScope | properties:'fieldsByZone.zLeft'\" let-i=\"index\">\n      <ng-container *ngTemplateOutlet=\"PrintField;context:{$implicit: fieldName}\">\n      </ng-container>\n    </ng-template>\n  </m-context>\n</ng-template>\n\n\n<ng-template #PrintField let-field>\n  <m-context #mcf [field]=\"field\">\n    <span style=\"font-weight: bold; \">\n          <h3>{{mcf | properties:'field'}}</h3>\n    </span>\n\n    <ng-container *ngTemplateOutlet=\"debugPrint;context:{$implicit: mcf}\">\n    </ng-container>\n\n    <span *ngIf=\"(mcf | properties:'type') === 'Array'\">\n        <ng-container *ngTemplateOutlet=\"PrintArrayField;context:{$implicit: field}\">\n        </ng-container>\n    </span>\n  </m-context>\n</ng-template>\n\n\n<ng-template #PrintArrayField let-field>\n  <h2 style=\"color: cadetblue; margin-left: 30px\">Array Details</h2>\n  <div *ngFor=\"let li of pr[field]; index as i\" style=\"margin-left: 60px\">\n       <h2 style=\"color: cornflowerblue; margin-left: 30px\">Array Item[{{i}}] - {{li.shortText}}</h2>\n\n        <m-context #mcLineItem [object]=\"li\" operation=\"edit\" [pushNewContext]=\"true\">\n           <ng-container *ngTemplateOutlet=\"PrintObject;context:{$implicit: mcLineItem}\">\n           </ng-container>\n        </m-context>\n  </div>\n</ng-template>\n\n<ng-template #debugPrint let-mc>\n  <span *ngIf=\"false\" style=\"color: green\">\n    <ng-container *ngTemplateOutlet=\"Inspector;context:{$implicit: mc}\">\n    </ng-container>\n  </span>\n\n  <ul *ngIf=\"true\" style=\"margin-left: 15px\">\n    <li *ngFor=\"let record of mc.myContext().allProperties()._map | keyvalue \">\n      {{record.key}} :\n      <span *ngIf=\"record.key === 'bindings'\">\n              &#123;\n              <ul style=\"margin-left: 25px\">\n\n                <li *ngFor=\"let binding of mc | properties:'bindings' | keyvalue \">\n\n                  <span\n                    *ngIf=\"binding.value.constructor.name === 'Expr' || binding.value.constructor.name === 'ContextFieldPath'\">\n                    <span style=\"font-style: italic\">{{binding.key}} </span>:\n                    {{binding.value.evaluate(mc.myContext())}}  : {{binding.value}}\n                  </span>\n\n                  <span\n                    *ngIf=\"binding.value.constructor.name !== 'Expr' && binding.value.constructor.name !== 'ContextFieldPath'\">\n                      {{binding.key}} : {{binding.value}}\n                  </span>\n                </li>\n              </ul>\n              &#125;\n            </span>\n\n      <span *ngIf=\"record.key !== 'bindings'\">\n               {{mc.myContext().propertyForKey(record.key)}}\n      </span>\n    </li>\n  </ul>\n</ng-template>\n\n<ng-template #Inspector let-mc>\n  <div style=\"margin-top: 10px; border-top: 1px solid black; margin-left: 160px\">\n          <span [innerHTML]=\"mc.debugString()\">\n          </span>\n  </div>\n</ng-template>\n\n<app-requisition-form *ngIf=\"true\" [req]=\"pr\"></app-requisition-form>\n","import {Injectable} from '@angular/core';\nimport {Context, UIMeta} from '@ngx-metaui/rules';\nimport {BehaviorSubject, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetaObjectService {\n\n  private context: Context;\n\n  // private state$: Subject<Record<MetaObjectType, MetaObject>> = new Subject();\n\n  public meta$: Subject<MetaObject> = new BehaviorSubject(null);\n\n  constructor(\n    protected meta: UIMeta,\n  ) {\n    this.context = this.meta.newContext();\n    this.context.push();\n    this.context.set('layout', 'Inspect');\n    this.context.set('operation', 'view');\n  }\n\n  // public select(selector: MetaObjectType): Observable<MetaObject> {\n  //   return this.state$.pipe(\n  //     map(state => state[selector]),\n  //   );\n  // }\n\n  public setObject(obj: any): void {\n    this.context.set('object', obj);\n    this._update();\n  }\n\n  public setDocumentType(type: string): void {\n    this.context.set('documentType', type);\n    this._update();\n  }\n\n  private _update(): void {\n    const meta: MetaObject = {\n      title: {\n        label: 'Title',\n        disabled: false,\n        visible: false,\n        required: false,\n      },\n      status: {\n        label: 'Status',\n        disabled: false,\n        visible: false,\n        required: false,\n      },\n      totalNetAmount: {\n        label: 'Total',\n        disabled: false,\n        visible: false,\n        required: false,\n      },\n    };\n\n    const props = ['disabled', 'visible', 'label'];\n    const fields = this._getFields('Requisition');\n\n    for (const field of fields) {\n      this.context.set('field', field);\n      if (!meta[field]) {\n        meta[field] = {...DEFAULT_META_FIELD};\n      }\n      for (const prop of props) {\n        meta[field][prop] = this.context.propertyForKey(prop);\n      }\n\n      // check to see if field is required\n      meta[field].required = this.context.propertyForKey('trait') === 'required';\n    }\n\n    this.meta$.next(meta);\n  }\n\n  private _getFields(className: string): string[] {\n    this.context.set('class', className);\n    let keys = [];\n    const fieldMap: Map<string, any> = this.context.propertyForKey('fieldsByZone');\n    fieldMap.forEach((zone) => {\n      if (zone) {\n        keys = keys.concat(zone);\n      }\n    });\n    return keys;\n  }\n\n}\n\nexport type MetaObjectType = 'Requistion' | 'ReqLineItem';\n\nexport interface IMetaField {\n  label: string;\n  disabled?: boolean;\n  visible?: boolean;\n  required?: boolean;\n}\n\nexport const DEFAULT_META_FIELD: IMetaField = {\n  label: '',\n  disabled: false,\n  visible: false,\n  required: false,\n};\n\nexport type MetaObject = Record<string, IMetaField>;\n","import {Entity} from '@ngx-metaui/rules';\n\nexport class CompanyCode implements Entity {\n  name: string;\n  description: string;\n\n\n  constructor(name: string, description: string) {\n    this.name = name;\n    this.description = description;\n  }\n\n  className(): string {\n    return 'CompanyCode';\n  }\n\n  getTypes(): any {\n    return {\n      name: String,\n      description: String\n    };\n  }\n\n  identity(): string {\n    return this.name;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CompanyCode } from '../model/company-code.model';\nimport { Money } from '../model/money.model';\nimport { ReqLineItem } from '../model/requisition-li.model';\nimport { Requisition } from '../model/requisition.model';\nimport { Supplier } from '../model/supplier.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequisitionService {\n\n  requisition$: Subject<Requisition> = new Subject();\n\n  constructor() { }\n\n  getRequisition(reqId: string): void {\n    const req = this._generateRequisition(reqId);\n    this.requisition$.next(req);\n  }\n\n  private _generateRequisition(prId: string): Requisition {\n    let data = REQUISITIONS.find(item => item.uniqueName === prId);\n    if (!data) {\n      data = REQUISITIONS[0];\n    }\n    const req = new Requisition(\n      data.uniqueName,\n      data.title,\n      data.dueOn,\n      data.status,\n      data.totalNetAmount,\n    );\n\n    if (Array.isArray(data.lineItems)) {\n      data.lineItems.forEach(item => {\n        req.addLineItem(new ReqLineItem(\n          item.shortText,\n          new Supplier(item.supplier.name),\n          item.price,\n          item.quantity,\n          new CompanyCode(item.companyCode.name, item.companyCode.description),\n          item.minQuantity || 2,\n        ));\n      });\n    }\n\n    return req;\n  }\n}\n\nconst REQUISITIONS: any[] = [{\n  uniqueName: 'PR1',\n  title: 'Office Items',\n  dueOn: new Date(),\n  status: 'Approved',\n  totalNetAmount: 600,\n  lineItems: [{\n    shortText: 'Apple Keyboard',\n    supplier: {\n      name: 'Apple Inc.',\n    },\n    price: 500,\n    quantity: 1,\n    companyCode: {\n      name: 'CC01',\n      description: 'CC01 description',\n    },\n  }, {\n    shortText: 'Pen',\n    supplier: {\n      name: 'Office Depot',\n    },\n    price: 10,\n    quantity: 10,\n    companyCode: {\n      name: 'CC01',\n      description: 'CC01 description',\n    },\n    minQuantity: 5,\n  }],\n}, {\n  uniqueName: 'PR2',\n  title: 'Conference Items',\n  dueOn: new Date(),\n  status: 'Draft',\n  totalNetAmount: 160000,\n  lineItems: [{\n    shortText: 'T-Shirts',\n    supplier: {\n      name: 'T-Shirts R Us',\n    },\n    price: 10,\n    quantity: 10000,\n    companyCode: {\n      name: 'CC01',\n      description: 'CC01 description',\n    },\n  }, {\n    shortText: 'Hats',\n    supplier: {\n      name: 'Hat Emporium',\n    },\n    price: 12,\n    quantity: 5000,\n    companyCode: {\n      name: 'CC02',\n      description: 'CC02 description',\n    },\n  }],\n\n}];\n","/**\n *  This is generated file. Do not edit !!\n *\n *  @formatter:off\n *\n */\n/* tslint:disable */\nexport const ReqLineItemRule = 'class=ReqLineItem {ɵ  field=(price, shortText, supplier, companyCode, quantity ) {ɵ    after: zLeft;ɵ  }ɵɵ  field=shortText {ɵ    editable:false;ɵ    label: \"Product Name\";ɵ  }ɵɵ  field=supplier {ɵ    editable:false;ɵ    label: \"Supplier\";ɵ  }ɵɵ  field=price {ɵ    editable:false;ɵ    label: \"Unit Price\";ɵ  }ɵɵ  field=quantity {ɵ     label: \"Qty\";ɵ     valid: ${ parseInt(value) >= 1 ? true : \"Minimum Qty not met\"};ɵ  }ɵɵ  field=companyCode {ɵ    editable:false;ɵ    visible:false;ɵ    label: \"Company Code\";ɵ  }ɵɵ  field=minQuantity {ɵ      visible:false;ɵ  }ɵɵ  zNone => *;ɵ  zLeft => shortText  =>  supplier  => companyCode  => quantity => price;ɵ}ɵ';\n/* tslint:disable */\n/**\n *  @formatter:on\n *\n */\n ","import {Value} from '@ngx-metaui/rules';\n\nexport class Money implements Value {\n  amount: number;\n  currency: string;\n\n\n  constructor(amount: number = 0, currency: string = 'USD') {\n    this.amount = amount;\n    this.currency = currency;\n  }\n\n  className(): string {\n    return 'Money';\n  }\n\n  clone(): Value {\n    return undefined;\n  }\n\n  getTypes(): any {\n    return {\n      amount: Number,\n      currency: String\n    };\n  }\n\n\n}\n","import * as userRules from './rules/user-rules';\nimport {MetaConfig, MetaUIRulesModule, UIMeta} from '@ngx-metaui/rules';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {RequisitionFormComponent} from './components/requisition-form/requisition-form.component';\nimport {MetaObjectService} from './services/meta-object.service';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RequisitionService} from './services/requisition.service';\nimport {AppComponent} from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MonacoEditorModule} from 'ngx-monaco-editor';\nimport {MetaValidator} from './components/requisition-form/meta.validator';\nimport {ContextFlattenVisible} from './components/requisition-form/meta.flatten-visible.pipe';\nimport {DateInputConverter} from './components/requisition-form/date-converter.directive';\nimport {NgxCurrencyModule} from 'ngx-currency';\n\nconst routes: Routes = [];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RequisitionFormComponent,\n    MetaValidator,\n    ContextFlattenVisible,\n    DateInputConverter\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxCurrencyModule,\n    MonacoEditorModule.forRoot(),\n    RouterModule.forRoot(routes),\n    MetaUIRulesModule.forRoot({loadApplicationRule: true})\n  ],\n  providers: [MetaObjectService, RequisitionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor(private config: MetaConfig, private re: UIMeta) {\n    config.registerRules(userRules)\n\n\n  }\n}\n","import {Directive, Input} from '@angular/core';\nimport {AbstractControl, FormControl, NG_VALIDATORS, Validator, ValidatorFn} from '@angular/forms';\nimport {MetaContextComponent} from '@ngx-metaui/rules';\n\nfunction validateMetaRulesFactory(): ValidatorFn {\n  return (c: AbstractControl) => {\n    const context = c['context'];\n    const editing = context.booleanPropertyForKey('editing', false);\n\n    if (editing) {\n      context.value = (c.value != context.value) ? c.value : context.value\n      const errorMsg = context.validateErrors();\n      return errorMsg ? {'metavalid': {'msg': errorMsg}} : null;\n    }\n    return null;\n  }\n}\n\n\n@Directive({\n  selector: '[metaValid][ngModel]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: MetaValidator, multi: true}\n  ]\n})\nexport class MetaValidator implements Validator {\n  validator: ValidatorFn;\n\n  @Input('context')\n  mc: MetaContextComponent;\n\n\n  constructor() {\n    this.validator = validateMetaRulesFactory();\n  }\n\n  validate(control: FormControl) {\n    control['context'] = this.mc.context;\n    return this.validator(control);\n  }\n\n}\n","import {Directive, ElementRef, forwardRef, HostListener, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Directive({\n  selector: 'input[type=\"date\"][ngModel]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DateInputConverter),\n      multi: true,\n    },\n  ],\n})\nexport class DateInputConverter implements ControlValueAccessor {\n  private fnChange: (value: Date) => void = () => void 0;\n  private fnTouched: () => void = () => void 0;\n\n  constructor(\n    private readonly host: ElementRef,\n    private readonly renderer: Renderer2,\n  ) {\n  }\n\n  @HostListener('input', ['$event'])\n  private onInput(event: any) {\n    const newValue = new Date(event.target.value);\n    this.fnChange(newValue);\n  }\n\n  writeValue(obj: Date): void {\n    this.renderer.setProperty(this.host.nativeElement, 'valueAsNumber', obj?.getTime() ?? '');\n  }\n\n  registerOnChange(fn: any): void {\n    this.fnChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.fnTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.renderer.setProperty(this.host.nativeElement, 'disabled', isDisabled);\n  }\n}\n","/**\n *  This is generated file. Do not edit !!\n *\n *  @formatter:off\n *\n */\n/* tslint:disable */\nexport const ApplicationRule = '/**ɵ * Module represent Global Top level application app tab. Modules are used in combination withɵ * <m-app> component.ɵ *ɵ * Application.oss is used for all global settings and OSS definitionsɵ */ɵmodule {ɵ}ɵɵfield {ɵ    @trait=required {ɵ        operation=(edit, create) {ɵ            required:true;ɵ            object {ɵ                valid: ${( value == null || value.length  == 0) ? \"Required field\": true};ɵ            }ɵ        }ɵ    }ɵɵ}ɵ';\n/* tslint:disable */\n/**\n *  @formatter:on\n *\n */\n ","import {Pipe, PipeTransform} from '@angular/core';\nimport {KeyClass, KeyField, MetaContextComponent, PropFieldsByZone, ZonesMTLRB, ZonesTLRMB} from '@ngx-metaui/rules';\n\n@Pipe({\n  name: 'flattenVisible',\n  pure: false\n})\nexport class ContextFlattenVisible implements PipeTransform {\n\n  transform(metaContext: MetaContextComponent, zoneList: 'form' | 'table' = 'form'): any {\n    const context = metaContext.context;\n\n    context.push();\n    context.setScopeKey(KeyClass);\n    const fieldsByZone = context.propertyForKey(PropFieldsByZone);\n\n    return context.meta.flattenVisible(fieldsByZone,\n      zoneList === 'form' ? ZonesMTLRB : ZonesTLRMB,\n      KeyField, context);\n  }\n}\n","/**\n * Content of this file is automatically populated by oss compiler\n */\n\nexport {ApplicationRule} from './ts/Application.oss';\n\nexport {ReqLineItemRule} from './ts/ReqLineItem.oss';\n\nexport {RequisitionRule} from './ts/Requisition.oss';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}